<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.3 U (http://www.xmlspy.com) by Virginie Claessens (SPACEBEL) -->
<!-- edited with XMLSPY v5 U (http://www.xmlspy.com) by The Hoa Nguyen (SPACEBEL) -->
<!--
    File		:	mass.xsd
    File Type	:	W3C XML schema
    Abstract	:	Common XSD interface for MASS services. 
    Uses		:	ESRIN oi.xsd ordering schema, version September 2001.
    Used by	:	service_xx.xsd, 
    				service_xx.wsdl
        History:

     $Log: mass.xsd,v $
     Revision 1.4  2004/12/21 12:42:04  mgs
     Add information on previous operations. There can be more than one rfqOuput as input of an Order.

     Revision 1.3  2004/08/05 09:15:25  mgs
     Add optional elements: id in RFQOutputType, sendRFQInput, rfqOutput in SendOrderInputType and ProcessOrderInputType.


     End of history.

-->
<xsd:schema targetNamespace="http://www.esa.int/mass" xmlns="http://www.esa.int/mass" xmlns:aoi="http://www.esa.int/xml/schemas/mass/aoifeatures" xmlns:oi="http://www.esa.int/oi" xmlns:eoli="http://earth.esa.int/XML/eoli" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
  <xsd:import namespace="http://www.esa.int/oi" schemaLocation="oi.xsd"/>
  <xsd:import namespace="http://www.esa.int/xml/schemas/mass/aoifeatures" schemaLocation="aoifeatures.xsd"/>
  <xsd:import namespace="http://earth.esa.int/XML/eoli" schemaLocation="eoli.xsd"/>
  <!-- Common basic types -->
  <xsd:complexType name="StatusInfoType">
    <xsd:annotation>
      <xsd:documentation>status info of the processing of a service's business functions is in this type.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="statusId" type="xsd:nonNegativeInteger" default="0">
        <xsd:annotation>
          <xsd:documentation>0 for nominal status</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="statusMsg" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FileResultType">
    <xsd:annotation>
      <xsd:documentation>File location that also includes a file type information so that a file viewer can be associated</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fileURL" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>URL of the file : for the GML viewer it must be a http URL</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="fileType" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>String that is used to determine which viewer will be used e.g GML</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EmbeddedResultType">
    <xsd:annotation>
      <xsd:documentation>Data to be displayed and  also embedded type information so that a viewer can be associated</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="embeddedResult" type="xsd:anyType">
        <xsd:annotation>
          <xsd:documentation>content to be displayed</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="embeddedType" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>String that is used to determine which viewer will be used e.g GML</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CommonInputType">
    <xsd:annotation>
      <xsd:documentation>Common input for all business functions</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="orderId" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <!-- Common basic elements -->
  <xsd:element name="commonInput" type="CommonInputType">
    <xsd:annotation>
      <xsd:documentation>contains common info of a service business function</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="statusInfo" type="StatusInfoType">
    <xsd:annotation>
      <xsd:documentation>contains status info about the processing of a service's business functions</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="viewEmbeddedResult" type="EmbeddedResultType"/>
  <xsd:element name="viewFileResult" type="FileResultType">
    <xsd:annotation>
      <xsd:documentation>Represent a file URL, file which  can be displayed by a MASS viewer</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!-- Present types -->
  <xsd:complexType name="PresentInputType">
    <xsd:annotation>
      <xsd:documentation>Input parameters for the present operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="eoli:presentRequest" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProcessPresentInputType">
    <xsd:annotation>
      <xsd:documentation>type of the input message of a service's processPresent soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="eoli:presentRequest"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProcessPresentOutputType">
    <xsd:annotation>
      <xsd:documentation>type of the ouput message of a service's present  soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="searchOutput"/>
    </xsd:sequence>
  </xsd:complexType>
  <!-- Present Elements -->
  <xsd:element name="presentInput" type="PresentInputType"/>
  <xsd:element name="processPresentInputMsg" type="ProcessPresentInputType">
    <xsd:annotation>
      <xsd:documentation>input message element for the processPresent SOAP request</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="processPresentOutputMsg" type="ProcessPresentOutputType">
    <xsd:annotation>
      <xsd:documentation>output message element for the processPresent SOAP response</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!-- Search types -->
  <xsd:complexType name="SearchInputType">
    <xsd:annotation>
      <xsd:documentation>input parameters for the Search operation.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="aoi:areaOfInterest" minOccurs="0"/>
      <xsd:element ref="eoli:searchRequest" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProcessSearchInputType">
    <xsd:annotation>
      <xsd:documentation>type of the input message of a service's processPresent SOAP request</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="searchInput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RetrievedDataType">
    <xsd:annotation>
      <xsd:documentation>type of the retrieved data</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Metadata" type="eoli:MetadataType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="presentation" type="eoli:PresentationType"/>
  </xsd:complexType>
  <xsd:complexType name="SearchOutputType">
    <xsd:annotation>
      <xsd:documentation>standard information that contains the specific output of a Search or Present operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="statusInfo"/>
      <xsd:element name="hits" type="xsd:nonNegativeInteger" default="0" minOccurs="0"/>
      <xsd:element name="cursor" type="xsd:positiveInteger" nillable="false" minOccurs="0"/>
      <xsd:element ref="retrievedData" minOccurs="0"/>
      <xsd:element ref="viewFileResult" minOccurs="0"/>
      <xsd:element ref="viewEmbeddedResult" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchCollectionsType">
    <xsd:annotation>
      <xsd:documentation>type of the ouput message of a service's process Search soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="eoli:collectionId" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProcessSearchOutputType">
    <xsd:annotation>
      <xsd:documentation>type of the  information of a service's Search SOAP response</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="searchOutput"/>
    </xsd:sequence>
  </xsd:complexType>
  <!-- Search Elements -->
  <xsd:element name="searchCollections" type="SearchCollectionsType">
    <xsd:annotation>
      <xsd:documentation>element that contains the CollectionIds that will be searched for</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="searchInput" type="SearchInputType">
    <xsd:annotation>
      <xsd:documentation>element that represents the needed information to make a search</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="retrievedData" type="RetrievedDataType">
    <xsd:annotation>
      <xsd:documentation>element that represents the collection of retrieved data from a Search or a Present</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="searchOutput" type="SearchOutputType">
    <xsd:annotation>
      <xsd:documentation>element that contains the Search/Present Results</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="processSearchInputMsg" type="ProcessSearchInputType">
    <xsd:annotation>
      <xsd:documentation>document element of message sent to the Catalogue Search Operation</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="processSearchOutputMsg" type="ProcessSearchOutputType">
    <xsd:annotation>
      <xsd:documentation>document element of message responsed by the the Catalogue Search Operation</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!-- RFQ types -->
  <xsd:complexType name="RFQInputType">
    <xsd:annotation>
      <xsd:documentation>service's rfq input parameters are in this type. Normally, the service provider will redefine this type to add more service-specific info</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="oi:originPart" minOccurs="0"/>
      <xsd:element ref="aoi:areaOfInterest" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RFQOutputType">
    <xsd:annotation>
      <xsd:documentation>service's rfq results are in this type. Normally, the service provider will redefine this type to add more service-specific info.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string" minOccurs="0"/>
      <xsd:element name="price" type="oi:PriceType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MultiRFQOutputType">
    <xsd:annotation>
      <xsd:documentation>service's rfq can return more than one result. </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="statusInfo"/>
      <xsd:element ref="rfqOutput" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="viewFileResult" minOccurs="0"/>
      <xsd:element ref="viewEmbeddedResult" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SendRFQInputType">
    <xsd:annotation>
      <xsd:documentation>type of the input message of a service's sendRFQ soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="commonInput"/>
      <xsd:element ref="searchInput" minOccurs="0"/>
      <xsd:element ref="searchOutput" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="sendRFQInput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SendRFQOutputType">
    <xsd:annotation>
      <xsd:documentation>type of the  output message of a service's sendRFQ soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="statusInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetRFQResultInputType">
    <xsd:annotation>
      <xsd:documentation>type of the input message of a service's getRFQResult soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="commonInput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetRFQResultOutputType">
    <xsd:annotation>
      <xsd:documentation>type of the output message of a service's getRFQResult soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="commonInput"/>
      <xsd:element ref="getRFQOutput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProcessRFQInputType">
    <xsd:annotation>
      <xsd:documentation>type of the input message of a service's processRFQ soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="commonInput"/>
      <xsd:element ref="searchInput" minOccurs="0"/>
      <xsd:element ref="searchOutput" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="sendRFQInput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProcessRFQOutputType">
    <xsd:annotation>
      <xsd:documentation>type of the output message of a service's processRFQ SOAP response</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="getRFQOutput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ReturnRFQResultInputType">
    <xsd:annotation>
      <xsd:documentation>type of the input message of the returnRFQResult SOAP request sent to the MASS server</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="commonInput"/>
      <xsd:element ref="getRFQOutput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ReturnRFQResultOutputType">
    <xsd:annotation>
      <xsd:documentation>type of the output message of the returnRFQResult SOAP response hosted on MASS server</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="statusInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <!-- RFQ Elements -->
  <xsd:element name="sendRFQInput" type="RFQInputType">
    <xsd:annotation>
      <xsd:documentation>element that contains a service's RFQ input parameters</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getRFQOutput" type="MultiRFQOutputType">
    <xsd:annotation>
      <xsd:documentation>element contains a service's RFQ results</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="rfqOutput" type="RFQOutputType">
    <xsd:annotation>
      <xsd:documentation>element contains one  RFQ result</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="sendRFQInputMsg" type="SendRFQInputType"/>
  <xsd:element name="sendRFQOutputMsg" type="SendRFQOutputType"/>
  <xsd:element name="getRFQResultInputMsg" type="GetRFQResultInputType"/>
  <xsd:element name="getRFQResultOutputMsg" type="GetRFQResultOutputType"/>
  <xsd:element name="returnRFQResultInputMsg" type="ReturnRFQResultInputType"/>
  <xsd:element name="returnRFQResultOutputMsg" type="ReturnRFQResultOutputType"/>
  <xsd:element name="processRFQInputMsg" type="ProcessRFQInputType"/>
  <xsd:element name="processRFQOutputMsg" type="ProcessRFQOutputType"/>
  <!-- Order types -->
  <xsd:complexType name="OrderInputType">
    <xsd:annotation>
      <xsd:documentation>service's order input parameters are in this type. Normally, the service provider will redefine this type to add more service-specific info.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="oi:originPart" minOccurs="0"/>
      <xsd:element ref="aoi:areaOfInterest" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OrderOutputType">
    <xsd:annotation>
      <xsd:documentation>service's order results are in this type.  Normally, the service provider will redefine this type to add more service-specific info.        </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="statusInfo"/>
      <xsd:element ref="viewFileResult" minOccurs="0"/>
      <xsd:element ref="viewEmbeddedResult" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SendOrderInputType">
    <xsd:annotation>
      <xsd:documentation>type of the input message of a service's sendOrder soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="commonInput"/>
      <xsd:element ref="searchInput" minOccurs="0"/>
      <xsd:element ref="searchOutput" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="sendRFQInput" minOccurs="0"/>
      <xsd:element ref="rfqOutput" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="sendOrderInput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SendOrderOutputType">
    <xsd:annotation>
      <xsd:documentation>type of the output message of a service's sendOrder soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="statusInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetOrderResultInputType">
    <xsd:annotation>
      <xsd:documentation>type of the input  message of a service's getOrderResult soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="commonInput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetOrderResultOutputType">
    <xsd:annotation>
      <xsd:documentation>type of the output message of a service's getOrderResult soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="commonInput"/>
      <xsd:element ref="getOrderOutput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ReturnOrderResultInputType">
    <xsd:annotation>
      <xsd:documentation>type of the input message of the returnOrderResult soap operation hosted on MASS server</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="commonInput"/>
      <xsd:element ref="getOrderOutput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ReturnOrderResultOutputType">
    <xsd:annotation>
      <xsd:documentation>type of the output message of the returnOrderResult soap operation hosted on MASS server</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="statusInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProcessOrderInputType">
    <xsd:annotation>
      <xsd:documentation>type of the input message of a service's process Order soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="commonInput"/>
      <xsd:element ref="searchInput" minOccurs="0"/>
      <xsd:element ref="searchOutput" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="sendRFQInput" minOccurs="0"/>
      <xsd:element ref="rfqOutput" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element ref="sendOrderInput"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProcessOrderOutputType">
    <xsd:annotation>
      <xsd:documentation>type of the output message of a service's process Order soap operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="getOrderOutput"/>
    </xsd:sequence>
  </xsd:complexType>
  <!-- Order elements -->
  <xsd:element name="sendOrderInput" type="OrderInputType">
    <xsd:annotation>
      <xsd:documentation>contains a service's order input parameters</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getOrderOutput" type="OrderOutputType">
    <xsd:annotation>
      <xsd:documentation>contains a service's order result</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="sendOrderInputMsg" type="SendOrderInputType"/>
  <xsd:element name="sendOrderOutputMsg" type="SendOrderOutputType"/>
  <xsd:element name="getOrderResultInputMsg" type="GetOrderResultInputType"/>
  <xsd:element name="getOrderResultOutputMsg" type="GetOrderResultOutputType"/>
  <xsd:element name="returnOrderResultInputMsg" type="ReturnOrderResultInputType"/>
  <xsd:element name="returnOrderResultOutputMsg" type="ReturnOrderResultOutputType"/>
  <xsd:element name="processOrderInputMsg" type="ProcessOrderInputType"/>
  <xsd:element name="processOrderOutputMsg" type="ProcessOrderOutputType"/>
  <xsd:complexType name="MultiCataloguesSearchInputType">
    <xsd:annotation>
      <xsd:documentation>type for input xml message used to do search on multiple catalogues</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="searchCollections"/>
      <xsd:element ref="aoi:areaOfInterest" minOccurs="0"/>
      <xsd:element ref="eoli:searchRequest" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MultiCataloguesSearchOutputType">
    <xsd:annotation>
      <xsd:documentation>type for ouput xml message resulted from a multiple search</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="statusInfo"/>
      <xsd:element ref="searchOutputs" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="searchOutputs">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="eoli:collectionId"/>
        <xsd:element ref="searchOutput"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="multiCataloguesSearchInputMsg" type="MultiCataloguesSearchInputType"/>
  <xsd:element name="multiCataloguesSearchOutputMsg" type="MultiCataloguesSearchOutputType"/>
</xsd:schema>
