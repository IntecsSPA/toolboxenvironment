<?xml version="1.0" encoding="UTF-8"?>
<wsd:description 
  targetNamespace="http://www.opengis.net/csw-ebrim/wsdl/1.0.0" 
  xmlns:tns="http://www.opengis.net/csw-ebrim/wsdl/1.0.0" 
  xmlns:wrs="http://www.opengis.net/cat/wrs" 
  xmlns:kvp="http://www.opengis.net/cat/wrs/kvp" 
  xmlns:csw="http://www.opengis.net/cat/csw" 
  xmlns:ows="http://www.opengeospatial.net/ows" 
  xmlns:wsd="http://www.w3.org/2005/08/wsdl" 
  xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <wsd:documentation>
  W3C WSDL 2.0 interface descriptions for the CSW-ebRIM catalogue application profile.
  </wsd:documentation>

  <wsd:types>
    <xs:import 
      namespace="http://www.opengis.net/cat/wrs" 
      schemaLocation="http://schemas.opengis.net/csw-ebrim/1.0.0/wrs-publication.xsd" />
    <xs:import 
      namespace="http://www.opengis.net/cat/csw" 
      schemaLocation="http://schemas.opengis.net/csw/2.0.1/CSW-publication.xsd" />
    <xs:import 
      namespace="http://www.opengeospatial.net/ows" 
      schemaLocation="http://schemas.opengis.net/ows/1.0.0/owsAll.xsd" />

    <xs:schema id="wrs-kvp"
      targetNamespace="http://www.opengis.net/cat/wrs/kvp"
      xmlns:kvp="http://www.opengis.net/cat/wrs/kvp">
      
      <xs:annotation>
        <xs:documentation xml:lang="en">
        This schema declares message elements for GET requests or POST requests 
        encoded as content type "application/x-www-form-urlencoded" (i.e., 
        KVP-style encoding).
        
        1. Parameter names and values are escaped. Space characters are 
           replaced by '+', and then reserved characters are percent-encoded 
           as described in RFC 3986, section 2.2.
        2. the parameter name is separated from the value by the EQUALS SIGN 
           character and name/value pairs are separated from each other 
           by the AMPERSAND character. If multiple values are allowed they 
           are separated using the COMMA character.
        </xs:documentation>
      </xs:annotation>

      <xs:group name="common-elements">
        <xs:sequence>
          <xs:element name="service" type="xs:anyURI" 
            fixed="urn:x-ogc:specification:csw-ebrim:Service:OGC-CSW:ebRIM" />
          <xs:element name="request" type="xs:string" />
        </xs:sequence>
      </xs:group>
      <xs:element name="GetCapabilities" type="kvp:GetCapabilitiesType"/>
      <xs:complexType name="GetCapabilitiesType">
		<xs:sequence>
          <xs:group ref="kvp:common-elements"/>
          <xs:element name="acceptVersions" type="kvp:AcceptVersionsType" minOccurs="0" />
          <xs:element name="sections" type="kvp:CommaSeparatedWordsType" minOccurs="0" />
          <xs:element name="updateSequence" type="xs:string" minOccurs="0" />
          <xs:element name="acceptFormats" type="kvp:CommaSeparatedValuesType" minOccurs="0" />
        </xs:sequence>
	  </xs:complexType>
      <xs:element name="GetRecordById" type="kvp:GetRecordByIdType"/>
      <xs:complexType name="GetRecordByIdType">
		<xs:sequence>
          <xs:group ref="kvp:common-elements"/>
          <xs:element name="id" type="xs:anyURI" />
          <xs:element name="elementSet" type="kvp:ElementSetType" minOccurs="0"/>
        </xs:sequence>
	  </xs:complexType>
      <xs:simpleType name="AcceptVersionsType">
        <xs:annotation>
          <xs:documentation xml:lang="en">
          Examples: "2.0.35", "1.1.0,1.1.1"
          </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\d+\.\d?\d\.\d?\d,?)+" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommaSeparatedValuesType">
        <xs:annotation>
          <xs:documentation xml:lang="en">
          Examples: "OperationsMetadata", "application/xml,text/html"
          </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:pattern value="([\w\+\-/]+,?)+" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ElementSetType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="brief" />
          <xs:enumeration value="summary" />
          <xs:enumeration value="full" />
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </wsd:types>

  <wsd:interface name="OGCWebService">

    <wsd:fault name="InvalidRequestFault" 
      element="ows:ExceptionReport">
      <wsd:documentation>
      The body of the request message is invalid or not well formed. The 
      document element must include a child ows:Exception element with code 
      wrs:InvalidRequest.
      </wsd:documentation>
    </wsd:fault>
 
    <wsd:operation name="GetCapabilities" 
      pattern="http://www.w3.org/2005/08/wsdl/in-out"
      style="http://www.w3.org/2005/08/wsdl/style/iri"
      safe="true">
      <wsd:documentation>
      Uses the GET method with the "application/x-www-form-urlencoded" 
      serialization format. Message elements are inserted into the Request-URI.
      </wsd:documentation>
      <wsd:input element="kvp:GetCapabilities" />
      <wsd:output element="wrs:Capabilities" />
      <wsd:outfault ref="tns:InvalidRequestFault" />
    </wsd:operation>

    <wsd:operation name="GetCapabilities-xml" 
      pattern="http://www.w3.org/2005/08/wsdl/in-out"
      safe="true">
      <wsd:documentation>
      Uses the POST method with the "application/xml" serialization format.
      </wsd:documentation>
      <wsd:input element="csw:GetCapabilities" />
      <wsd:output element="wrs:Capabilities" />
      <wsd:outfault ref="tns:InvalidRequestFault" />
    </wsd:operation>
  </wsd:interface>
  
  <wsd:interface name="Discovery">
    
    <wsd:fault name="InvalidRequestFault" 
      element="ows:ExceptionReport">
      <wsd:documentation>
      The body of the request message is invalid or not well formed. The 
      document element must include a child Exception element with code 
      wrs:InvalidRequest.
      </wsd:documentation>
    </wsd:fault>

    <wsd:operation name="GetRecords" 
      pattern="http://www.w3.org/2005/05/wsdl/in-out" 
      safe="true">
      <wsd:input element="csw:GetRecords" />
      <wsd:output element="csw:GetRecordsResponse" />
      <wsd:outfault ref="tns:InvalidRequestFault" />
    </wsd:operation>

    <wsd:operation name="GetRecordById" 
      pattern="http://www.w3.org/2005/08/wsdl/in-out"
      style="http://www.w3.org/2005/08/wsdl/style/iri"
      safe="true">
      <wsd:documentation>
      Uses the GET method with the "application/x-www-form-urlencoded" 
      serialization format. Message elements are inserted into the Request-URI.
      </wsd:documentation>
      <wsd:input element="kvp:GetRecordById" />
      <wsd:output element="csw:GetRecordByIdResponse" />
      <wsd:outfault ref="tns:InvalidRequestFault" />
    </wsd:operation>

    <wsd:operation name="GetRecordById-xml" 
      pattern="http://www.w3.org/2005/08/wsdl/in-out"
      safe="true">
      <wsd:input element="csw:GetRecordById" />
      <wsd:output element="csw:GetRecordByIdResponse" />
      <wsd:outfault ref="tns:InvalidRequestFault" />
    </wsd:operation>

    <wsd:operation name="DescribeRecord" 
      pattern="http://www.w3.org/2005/08/wsdl/in-out"
      safe="true">
      <wsd:input element="csw:DescribeRecord" />
      <wsd:output element="csw:DescribeRecordResponse" />
      <wsd:outfault ref="tns:InvalidRequestFault" />
    </wsd:operation>

    <wsd:operation name="GetDomain" 
      pattern="http://www.w3.org/2005/08/wsdl/in-out"
      safe="true">
      <wsd:input element="csw:GetDomain" />
      <wsd:output element="csw:GetDomainResponse" />
      <wsd:outfault ref="tns:InvalidRequestFault" />
    </wsd:operation>

    <wsd:operation name="GetRepositoryItem"
      pattern="http://www.w3.org/2005/08/wsdl/in-out"
      style="http://www.w3.org/2005/08/wsdl/style/iri"
      safe="true">
      <wsd:documentation>
      Uses the GET method with the "application/x-www-form-urlencoded" 
      serialization format. Message elements are inserted into the Request-URI.
      </wsd:documentation>
      <wsd:input element="kvp:GetRepositoryItem" />
      <wsd:output element="#other">
        <wsd:documentation>
        The entity-body must be an instance of a registered MIME media type. 
        See http://www.iana.org/assignments/media-types/.
        </wsd:documentation>
      </wsd:output>
      <wsd:outfault ref="tns:InvalidRequestFault" />
    </wsd:operation>
  </wsd:interface>

  <wsd:interface name="Publication">

    <wsd:fault name="InvalidRequestFault" 
      element="ows:ExceptionReport">
      <wsd:documentation>
      The body of the request message is invalid or not well formed. The 
      document element must include a child ows:Exception element with code 
      wrs:InvalidRequest.
      </wsd:documentation>
    </wsd:fault>
    
    <wsd:fault name="TransactionFailedFault" 
      element="ows:ExceptionReport">
      <wsd:documentation>
      The requested transaction could not be completed for some reason. The 
      document element must include a child ows:Exception element with code 
      wrs:TransactionFailed.
      </wsd:documentation>
    </wsd:fault>
 
    <wsd:operation name="Transaction" 
      pattern="http://www.w3.org/2005/08/wsdl/in-out">
      
      <wsd:input element="csw:Transaction"/>           
      <wsd:output element="csw:TransactionResponse"/>
      <wsd:outfault ref="tns:InvalidRequestFault" />
      <wsd:outfault ref="tns:TransactionFailedFault" />
    </wsd:operation>
                
    <wsd:operation name="Harvest"
      pattern="http://www.w3.org/2005/08/wsdl/in-out">
      
      <wsd:input element="csw:Harvest"/>
      <wsd:output element="csw:HarvestResponse"/>
      <wsd:outfault ref="tns:InvalidRequestFault" />
      <wsd:outfault ref="tns:TransactionFailedFault" />
    </wsd:operation>
  </wsd:interface>

</wsd:description>
