<?xml version="1.0"?>
<project default="buildnightly" basedir=".">
	<target name="init">
		<echo message="BUILDING SITE" />

		<property environment="env" />
		<property file="${basedir}/../ToolboxPlugin.properties" />


		<delete dir="${project.dir.generated_library}" />
		<mkdir dir="${project.dir.generated_library}" />

		<delete dir="${project.dir.generated_library}/${project.dir.offline}" />
		<mkdir dir="${project.dir.generated_library}/${project.dir.offline}" />

	</target>

	<!-- this target builds only-->
	<target name="build" depends="init,buildplugin,copyresources,makejar,ftpput" />
	<target name="buildnightly" depends="init,buildplugin,copyresources,makejar,ftpputNightly" />
	<target name="buildonly" depends="init,buildplugin,copyresources,makejar" />
	<target name="rundebug" depends="buildonly,copytoeclipse" />
	
	<target name="copyresources" depends="init">
		<echo>Copying resources</echo>

		<echo>Copying versioned site.xml</echo>
		<copy file="${project.dir}/site.xml_TEMPLATE" tofile="${project.dir.generated_library}/site.xml" />
		<replace file="${project.dir.generated_library}/site.xml" token="@@@" value="${project.site.version}" />

		<echo>Copying versioned feature.xml</echo>
		<copy file="${project.dir.plugins.feature}/feature.xml_TEMPLATE" tofile="${project.dir.generated_library}/feature.xml" />

		<copy file="${project.dir.plugins.feature}/images/intecslogo.jpg" tofile="${project.dir.generated_library}/images/intecslogo.jpg" />

		
		<replace file="${project.dir.generated_library}/feature.xml" token="@@@" value="${project.plugin.version.feature}" />
		<replace file="${project.dir.generated_library}/feature.xml" token="###" value="${project.plugin.version.model}" />
		<replace file="${project.dir.generated_library}/feature.xml" token="***" value="${project.plugin.version.ui}" />
		<replace file="${project.dir.generated_library}/feature.xml" token="^^^" value="${project.plugin.version.engine}" />
		<replace file="${project.dir.generated_library}/feature.xml" token="???" value="${project.plugin.version.libraries}" />
		<replace file="${project.dir.generated_library}/feature.xml" token="+++" value="${project.plugin.version.editorFiles}" />
		<replace file="${project.dir.generated_library}/feature.xml" token="---" value="${project.plugin.version.ftpFiles}" />
	</target>


	<target name="makejar" depends="init">
		<jar jarfile="${project.dir.generated_library}/toolbox.jar">
			<fileset dir="${project.dir.generated_library}">
				<include name="feature.xml" />
				<include name="images/intecslogo.jpg" />
			</fileset>
		</jar>


		<copy todir="${project.dir.generated_library}/${project.dir.offline}/${project.dir.plugins}">
			<fileset dir="${project.dir.plugins.model}/${project.dir.generated_library}">
				<include name="${plugin.model.fullname}" />
			</fileset>
			<fileset dir="${project.dir.plugins.ui}/${project.dir.generated_library}">
				<include name="${plugin.ui.fullname}" />
			</fileset>
			<fileset dir="${project.dir.plugins.engine}/${project.dir.generated_library}">
				<include name="${plugin.engine.fullname}" />
			</fileset>
		</copy>

		<unjar src="${project.dir.plugins.editorFiles}/${project.dir.generated_library}/${plugin.editorfiles.fullname}" dest="${project.dir.generated_library}/${project.dir.offline}/plugins/${plugin.editorfiles.name}_${project.plugin.version.editorFiles}" />
		<unjar src="${project.dir.plugins.ftpFiles}/${project.dir.generated_library}/${plugin.ftpfiles.fullname}" dest="${project.dir.generated_library}/${project.dir.offline}/plugins/${plugin.ftpfiles.name}_${project.plugin.version.ftpFiles}" />
		<unjar src="${project.dir.generated_library}/toolbox.jar" dest="${project.dir.generated_library}/${project.dir.offline}/features/Toolbox.Develop.Plugin_${project.plugin.version.feature}" />

		<zip destfile="${project.dir.generated_library}/offline-install.zip">
			<fileset dir="${project.dir.generated_library}/${project.dir.offline}">
				<include name="features/**/*.*" />
				<include name="plugins/**/*.*" />
				<include name="plugins/*.jar"/>
			</fileset>
		</zip>

		<delete dir="${project.dir.generated_library}/${project.dir.offline}" />
		<mkdir dir="${project.dir.generated_library}/${project.dir.offline}" />

		<unjar src="${project.dir.plugins.libraries}/${project.dir.generated_library}/${plugin.libraries.fullname}" dest="${project.dir.generated_library}/${project.dir.offline}/plugins/${plugin.libraries.name}_${project.plugin.version.libraries}" />

		<zip destfile="${project.dir.generated_library}/offline-install.libs.zip">
			<fileset dir="${project.dir.generated_library}/${project.dir.offline}">
				<include name="plugins/**/*.*" />
			</fileset>
		</zip>
		
		<delete dir="${project.dir.generated_library}/${project.dir.offline}" />
	</target>

	<target name="ftpputSite" depends="init">
		<ftp server="${project.ftp.address}" port="${project.ftp.port}" remotedir="${project.ftp.path}" userid="toolbox" password="toolbox" binary="yes">
			<fileset dir="${project.dir.temp}">
				<include name="site.xml" />
			</fileset>
		</ftp>
	</target>
	
	<target name="ftpput" depends="init">
		<ftp server="${project.ftp.address}" port="${project.ftp.port}" remotedir="${project.ftp.path}/features" userid="toolbox" password="toolbox" binary="yes">
			<fileset dir="${project.builddir.features}">
				<include name="*.jar" />
			</fileset>
		</ftp>


		<ftp server="${project.ftp.address}" port="${project.ftp.port}" remotedir="${project.ftp.path}/plugins" userid="toolbox" password="toolbox" binary="yes">
			<fileset dir="${project.builddir.plugins}">
				<include name="*.jar" />
			</fileset>
		</ftp>

		<ftp server="${project.ftp.address}" port="${project.ftp.port}" remotedir="${project.ftp.path}" userid="toolbox" password="toolbox" binary="yes">
			<fileset dir="${project.dir}">
				<include name="offline-install.zip" />
				<include name="offline-install.libs.zip" />
			</fileset>
		</ftp>
	</target>

	<target name="ftpputSiteNightly" depends="init">
		<ftp server="${project.ftp.address.nightly}" port="${project.ftp.port.nightly}" remotedir="${project.ftp.path.nightly}" userid="toolbox" password="toolbox" binary="yes">
			<fileset dir="${basedir}">
				<include name="site.xml" />
			</fileset>
		</ftp>
	</target>


	<target name="ftpputNightly" depends="init">
		<ftp server="${project.ftp.address.nightly}" port="${project.ftp.port.nightly}" remotedir="${project.ftp.path.nightly}/features" userid="toolbox" password="toolbox" binary="yes">
			<fileset dir="${project.dir.generated_library}">
				<include name="toolbox.jar" />
			</fileset>
		</ftp>


		<ftp server="${project.ftp.address.nightly}" port="${project.ftp.port.nightly}" remotedir="${project.ftp.path.nightly}/plugins" userid="toolbox" password="toolbox" binary="yes">
			<fileset dir="${project.dir.plugins.model}/${project.dir.generated_library}">
				<include name="${plugin.model.fullname}" />
			</fileset>
			<fileset dir="${project.dir.plugins.ui}/${project.dir.generated_library}">
				<include name="${plugin.ui.fullname}" />
			</fileset>
			<fileset dir="${project.dir.plugins.engine}/${project.dir.generated_library}">
				<include name="${plugin.engine.fullname}" />
			</fileset>
			<fileset dir="${project.dir.plugins.libraries}/${project.dir.generated_library}">
				<include name="${plugin.libraries.fullname}" />
			</fileset>
			<fileset dir="${project.dir.plugins.editorFiles}/${project.dir.generated_library}">
				<include name="${plugin.editorfiles.fullname}" />
			</fileset>
			<fileset dir="${project.dir.plugins.ftpFiles}/${project.dir.generated_library}">
				<include name="${plugin.ftpfiles.fullname}" />
			</fileset>
		</ftp>

		<ftp server="${project.ftp.address.nightly}" port="${project.ftp.port.nightly}" remotedir="${project.ftp.path.nightly}" userid="toolbox" password="toolbox" binary="yes">
			<fileset dir="${project.dir.generated_library}">
				<include name="offline-install.zip" />
				<include name="offline-install.libs.zip" />
			</fileset>
		</ftp>
	</target>

	<target name="copytoeclipse">
		<unzip dest="${project.eclipse.test}">
			<fileset dir="${project.dir.generated_library}">
				<include name="offline-install.zip"/>
				<include name="offline-install.libs.zip"/>
			</fileset>
		</unzip>
	</target>
	
	
	<target name="buildplugin">
		<ant antfile="build.xml" dir="${project.dir.plugins.engine}" target="build" inheritAll="false"/>
		<ant antfile="build.xml" dir="${project.dir.plugins.libraries}" target="build" inheritAll="false"/>
		<ant antfile="build.xml" dir="${project.dir.plugins.editorFiles}" target="build" inheritAll="false"/>
		<ant antfile="build.xml" dir="${project.dir.plugins.model}" target="build" inheritAll="false"/>
		<ant antfile="build.xml" dir="${project.dir.plugins.ui}" target="build" inheritAll="false"/>
		<ant antfile="build.xml" dir="${project.dir.plugins.ftpFiles}" target="build" inheritAll="false"/>
			
	</target>
</project>

