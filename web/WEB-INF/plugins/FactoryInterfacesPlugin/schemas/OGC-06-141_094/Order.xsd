<?xml version="1.0" encoding="UTF-8"?>
<!-- 	File			:	Order.xsd 	 
	File Type	:	W3C Schema 	 	
	Date		:	05 Sep 2008
	Abstract	:	HMA Order Schema 	
	Uses		:	 	
	Author		:	Daniele Marchionni	 	
	Issue		:	V0.9.4 -->
<xs:schema xmlns="http://earth.esa.int/hma/ordering" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ows="http://www.opengis.net/ows" xmlns:gml="http://www.opengis.net/gml" xmlns:swe="http://www.opengis.net/swe/0.0" xmlns:sps="http://www.opengis.net/sps/0" targetNamespace="http://earth.esa.int/hma/ordering" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="http://www.opengis.net/swe/0.0" schemaLocation="swe/sweCommon/0.0.0/swe.xsd"/>
	<xs:import namespace="http://www.opengis.net/ows" schemaLocation="ows/1.0.0/owsGetCapabilities.xsd"/>
	<xs:import namespace="http://www.opengis.net/sps/0" schemaLocation="Order_spsCommon.xsd"/>
	<xs:import namespace="http://www.opengis.net/gml" schemaLocation="gml/3.1.1/base/gml.xsd"/>
	<xs:import namespace="http://www.opengis.net/ows" schemaLocation="ows/1.0.0/owsExceptionReport.xsd"/>
	<!-- ====================================================================== -->
	<!-- ======================= Operations root element ============================-->
	<!-- ====================================================================== -->
	<xs:element name="GetCapabilities">
		<xs:annotation>
			<xs:documentation>Request to a Order Service to perform the GetCapabilities operation. This operation allows a client to retrieve service metadata (capabilities XML) providing metadata for the specific Order server. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ows:GetCapabilitiesType">
					<xs:attribute name="service" type="ows:ServiceType" use="required" fixed="OS"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Capabilities">
		<xs:annotation>
			<xs:documentation>XML encoded Order Service GetCapabilities operation response. This document provides clients with service metadata about a specific service instance. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Sections parameter in the GetCapabilities operation request. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ows:CapabilitiesBaseType">
					<xs:sequence>
						<xs:element name="Contents" type="OrderingServiceContentsType" minOccurs="0"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetOptions" type="OrderOptionsRequestType"/>
	<xs:element name="GetOptionsResponse" type="OrderOptionsResponseType"/>
	<xs:element name="GetQuotation" type="GetQuotationRequestType">
		<xs:annotation>
			<xs:documentation>GetQuotation operation - request message</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="GetQuotationAck" type="GetQuotationAckType">
		<xs:annotation>
			<xs:documentation>GetQuotation operation - response message</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="GetQuotationResponse" type="GetQuotationResponseRequestType">
		<xs:annotation>
			<xs:documentation>Async reply to GetQuotation  - This message carries on the quotation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="GetQuotationResponseAck" type="GetQuotationResponseAckType">
		<xs:annotation>
			<xs:documentation>Response to acknowledge the receiption of quotation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Submit" type="SubmitOrderRequestType"/>
	<xs:element name="SubmitAck" type="SubmitOrderResponseType"/>
	<xs:element name="SubmitResponse" type="StatusNotificationType"/>
	<xs:element name="SubmitResponseAck" type="StatusNotificationAckType">
		<xs:annotation>
			<xs:documentation>Response to acknowledge the receiption of order status notification.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="GetStatus" type="GetStatusRequestType"/>
	<xs:element name="GetStatusResponse" type="GetStatusResponseType"/>
	<xs:element name="DescribeResultAccess" type="DescribeResultAccessRequestType"/>
	<xs:element name="DescribeResultAccessResponse" type="DescribeResultAccessResponseType"/>
	<xs:element name="Cancel" type="CancelRequestType"/>
	<xs:element name="CancelAck" type="CancelRequestAckType"/>
	<xs:element name="CancelResponse" type="StatusNotificationType"/>
	<xs:element name="CancelResponseAck" type="StatusNotificationAckType"/>
	<!-- ====================================================================== -->
	<!-- ======================= Elements Definition Section  ========================= -->
	<!-- ====================================================================== -->
	<xs:element name="orderId" type="xs:anyURI"/>
	<xs:element name="priority" type="PriorityType"/>
	<xs:element name="statusNotification">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="None"/>
				<xs:enumeration value="Final"/>
				<xs:enumeration value="All"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="collectionId">
		<xs:annotation>
			<xs:documentation>ESA GS: Provider.Facility.CollectionId --> 62 char</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:minLength value="1"/>
				<xs:maxLength value="62"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<!--======================================================================= -->
	<!--===================== ComplexType  Definition Section ======================= -->
	<!--======================================================================= -->
	<xs:complexType name="OrderRequestBaseType">
		<xs:annotation>
			<xs:documentation>XML encoded SPS operation request base, for all operations except Get Capabilities. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. </xs:documentation>
		</xs:annotation>
		<xs:attribute name="service" type="xs:string" use="required" fixed="OS">
			<xs:annotation>
				<xs:documentation>Service type identifier. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="version" use="required">
			<xs:annotation>
				<xs:documentation>Specification version for SPS version and operation.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:maxLength value="5"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="OrderResponseBaseType">
		<xs:annotation>
			<xs:documentation>Base type for all Ordering Service operation responses.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="status" type="OrderResponseStatusType" nillable="false"/>
			<xs:element name="errorMessage" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This field is set when status element is different from success. It provides some information about the occurred problem.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OrderingServiceContentsType">
		<xs:sequence>
			<xs:element name="GetQuotationCapabilities">
				<xs:annotation>
					<xs:documentation>This element specifies if and how the order quotation is supported: synchronously, asynchronously, synchronous with polling.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="supported" type="xs:boolean" use="required"/>
					<xs:attribute name="synchronous" type="xs:boolean" use="required"/>
					<xs:attribute name="asynchronous" type="xs:boolean" use="required"/>
					<xs:attribute name="monitoring" type="xs:boolean" use="required"/>
					<xs:attribute name="off-line" type="xs:boolean" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="FutureProductsOrdering">
				<xs:annotation>
					<xs:documentation>Specifies whether the Ordering Services supports future products ordering and the corresponding SPS URL.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="supported" type="xs:boolean" use="required"/>
					<xs:attribute name="SPS_URL" type="xs:anyURI"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SupportedCollections">
				<xs:annotation>
					<xs:documentation>List of collections allowed for ordering.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="collectionId" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- ====================================================================== -->
	<!--=====================    Order Submission    ======================= -->
	<!-- ====================================================================== -->
	<xs:complexType name="SubmitOrderRequestType">
		<xs:complexContent>
			<xs:extension base="OrderRequestBaseType">
				<xs:sequence>
					<xs:element name="timeStamp" type="xs:dateTime" minOccurs="0"/>
					<xs:choice>
						<xs:element ref="orderSpecification"/>
						<xs:element name="quotationId" type="QuotationIdType"/>
					</xs:choice>
					<xs:element ref="statusNotification">
						<xs:annotation>
							<xs:documentation>This element specifies how many status notifications are sent back to the caller of the Submit operation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SubmitOrderResponseType">
		<xs:complexContent>
			<xs:extension base="OrderResponseBaseType">
				<xs:sequence>
					<xs:element ref="orderId"/>
					<xs:element name="orderReference" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OrderSpecification">
		<xs:complexContent>
			<xs:extension base="CommonOrderSpecification">
				<xs:sequence maxOccurs="unbounded">
					<xs:element name="orderItem" type="CommonOrderItemType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CommonOrderSpecification">
		<xs:sequence>
			<xs:element ref="orderReference"/>
			<xs:element name="orderRemark" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
						<xs:minLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="deliveryInformation" type="DeliveryInformationType" minOccurs="0"/>
			<xs:element name="invoiceAddress" type="DeliveryAddressType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Address for sending the invoice.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="packaging" type="EnumPackagingType" nillable="true" minOccurs="0"/>
			<xs:element ref="priority" minOccurs="0"/>
			<xs:element name="orderType" type="EnumOrderType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="orderSpecification" type="OrderSpecification" abstract="false"/>
	<xs:complexType name="CreditCardInfoType">
		<xs:sequence>
			<xs:element name="creditCardInstitute"/>
			<xs:element name="nameOnCard"/>
			<xs:element name="cardNumber"/>
			<xs:element name="expirationDate"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PaymentOptionSelectedValue">
		<xs:sequence>
			<xs:element ref="paymentMethod"/>
			<xs:choice>
				<xs:element name="orderAccount" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:minLength value="1"/>
							<xs:maxLength value="20"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="creditCardInfo" type="xs:string" minOccurs="0">
					<xs:annotation>
						<xs:documentation>This element should be managed in more secure way</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<!-- ====================================================================== -->
	<!--=====================      Order Monitoring      ======================= -->
	<!-- ====================================================================== -->
	<xs:complexType name="GetStatusRequestType">
		<xs:complexContent>
			<xs:extension base="OrderRequestBaseType">
				<xs:sequence>
					<xs:element name="timeStamp" type="xs:dateTime" minOccurs="0"/>
					<xs:choice>
						<xs:element ref="orderId"/>
						<xs:element name="filteringCriteria" type="OrderSearchCriteriaType"/>
					</xs:choice>
					<xs:element name="presentation" type="PresentationType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GetStatusResponseType">
		<xs:complexContent>
			<xs:extension base="OrderResponseBaseType">
				<xs:sequence>
					<xs:element ref="orderMonitorSpecification" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CommonOrderMonitorSpecification">
		<xs:complexContent>
			<xs:extension base="CommonOrderSpecification">
				<xs:sequence>
					<xs:element ref="orderId"/>
					<xs:element name="orderStatusInfo" type="StatusType"/>
					<xs:element name="orderDateTime" type="xs:dateTime" minOccurs="0"/>
					<xs:element name="orderItem" type="CommonOrderStatusItemType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The orderItem has been defined optional in order to  perform GetStatus request with brief presentation. Of course orders without order items cannot be submitted.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="orderMonitorSpecification" type="CommonOrderMonitorSpecification" abstract="false"/>
	<xs:complexType name="OrderSearchCriteriaType">
		<xs:sequence>
			<xs:element name="lastUpdate" type="DateTimeTypes" minOccurs="0"/>
			<xs:element name="orderStatus" type="EnumStatusType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="orderReference" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<!-- ====================================================================== -->
	<!--=====================      Order Item      ======================= -->
	<!-- ====================================================================== -->
	<xs:complexType name="CommonOrderItemType">
		<xs:sequence>
			<xs:element ref="itemId"/>
			<xs:element ref="productOrderOptionsId"/>
			<xs:element name="orderItemRemark" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="options" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="sps:Parameter"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="sceneSelection" type="SceneSelectionType" minOccurs="0"/>
			<xs:element name="deliveryMethod" type="DeliveryMethodType" minOccurs="0"/>
			<xs:element name="packageMedium" type="PackageMedium" minOccurs="0"/>
			<xs:element name="numberOfCopies" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>In case of mail delivery, the number of copies to be delivered can be specified.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="payment" type="PaymentOptionSelectedValue" minOccurs="0"/>
			<xs:choice>
				<xs:element ref="productId"/>
				<xs:element ref="taskingRequestId"/>
				<xs:element ref="subscriptionId"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OrderItemIdType" abstract="false">
		<xs:annotation>
			<xs:documentation>Root type of the hierarchy of order item identifiers</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="ProductIdType">
		<xs:annotation>
			<xs:documentation>Identifier of catalogued product</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="OrderItemIdType">
				<xs:sequence>
					<xs:element ref="identifier"/>
					<xs:element ref="collectionId" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="productId" type="ProductIdType"/>
	<xs:complexType name="SubscriptionIdType">
		<xs:annotation>
			<xs:documentation>Identifier of subscription</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="OrderItemIdType">
				<xs:sequence>
					<xs:element ref="collectionId"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TaskingRequestIdType">
		<xs:complexContent>
			<xs:extension base="OrderItemIdType">
				<xs:sequence>
					<xs:element ref="sps:ID"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="taskingRequestId" type="TaskingRequestIdType"/>
	<xs:element name="subscriptionId" type="SubscriptionIdType"/>
	<!-- ====================================================================== -->
	<!--=====================           Order Item Monitor               ======================= -->
	<!-- ====================================================================== -->
	<xs:complexType name="CommonOrderStatusItemType">
		<xs:complexContent>
			<xs:extension base="CommonOrderItemType">
				<xs:sequence>
					<xs:element name="orderItemStatusInfo" type="StatusType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- ====================================================================== -->
	<!--===================         Order Options Definitions   =======================-->
	<!-- ====================================================================== -->
	<xs:simpleType name="PackageMedium">
		<xs:restriction base="xs:string">
			<xs:enumeration value="NTP"/>
			<xs:enumeration value="DAT"/>
			<xs:enumeration value="Exabyte"/>
			<xs:enumeration value="CD-ROM"/>
			<xs:enumeration value="DLT"/>
			<xs:enumeration value="D1"/>
			<xs:enumeration value="DVD"/>
			<xs:enumeration value="file"/>
			<xs:enumeration value="HDDVD"/>
			<xs:enumeration value="BD"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DeliveryMethodType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="mail"/>
			<xs:enumeration value="ftp"/>
			<xs:enumeration value="ftps"/>
			<xs:enumeration value="sftp"/>
			<xs:enumeration value="P2P"/>
			<xs:enumeration value="wcs"/>
			<xs:enumeration value="wms"/>
			<xs:enumeration value="e-mail"/>
			<xs:enumeration value="dds"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="OrderOptionsRequestType">
		<xs:complexContent>
			<xs:extension base="OrderRequestBaseType">
				<xs:sequence>
					<xs:element name="timeStamp" type="xs:dateTime" minOccurs="0"/>
					<xs:choice>
						<xs:element ref="collectionId"/>
						<xs:element ref="identifier" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element ref="taskingRequestId"/>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OrderOptionsResponseType">
		<xs:complexContent>
			<xs:extension base="OrderResponseBaseType">
				<xs:sequence>
					<xs:element ref="orderOptions" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>This element is not set when status is failure. It can be set if status is incomplete. It shall be set when status is success.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CommonOrderOptionsType">
		<xs:sequence>
			<xs:element ref="productOrderOptionsId"/>
			<xs:element name="description" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="orderType" type="EnumOrderType"/>
			<xs:element name="options" type="ParameterDescriptorType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="productDeliveryOptions" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="deliveryMethod" type="DeliveryMethodType"/>
						<xs:element name="packageMedium" type="PackageMedium" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="orderOptionInfoURL" type="xs:anyURI" minOccurs="0"/>
			<xs:element name="paymentOptions" type="PaymentOptionDefinitionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of possible payment options for ordering the product. This element is not specified if the payment options are defined in the user profile.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="sceneSelectionOption" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="sceneType">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
									<xs:minLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="orderOptions" type="CommonOrderOptionsType" abstract="false"/>
	<xs:complexType name="PaymentOptionDefinitionType">
		<xs:sequence>
			<xs:element ref="paymentMethod"/>
			<xs:element name="paymentOptionInfoURL" type="xs:anyURI" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ParameterDescriptorType">
		<xs:complexContent>
			<xs:extension base="sps:ParameterDescriptorType">
				<xs:sequence>
					<xs:element ref="identifier" minOccurs="0"/>
					<xs:element name="grouping" minOccurs="0">
						<xs:annotation>
							<xs:documentation>It identifies the group the option belong to e.g. processing option, etc.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="40"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- ====================================================================== -->
	<!--============    Order Quotation Definitions    ========================-->
	<!-- ====================================================================== -->
	<xs:complexType name="GetQuotationRequestType">
		<xs:complexContent>
			<xs:extension base="OrderRequestBaseType">
				<xs:sequence>
					<xs:element name="timeStamp" type="xs:dateTime" minOccurs="0"/>
					<xs:choice>
						<xs:element ref="orderSpecification">
							<xs:annotation>
								<xs:documentation>This choice is set for getting the quotation of an order.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="quotationId" type="QuotationIdType">
							<xs:annotation>
								<xs:documentation>This choice is set when quotation monitoring is supported and a quotation request has been already submitted.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GetQuotationAckType">
		<xs:complexContent>
			<xs:extension base="OrderResponseBaseType">
				<xs:sequence minOccurs="0">
					<xs:annotation>
						<xs:documentation>The element is set when status is different from failure.</xs:documentation>
					</xs:annotation>
					<xs:choice>
						<xs:element name="quotationId" type="QuotationIdType">
							<xs:annotation>
								<xs:documentation>This choice is set in case of non sync quotations.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="quotation" type="OrderQuotation">
							<xs:annotation>
								<xs:documentation>This choice is set in case of synchronous quotations or as answer to quotation monitoring.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GetQuotationResponseRequestType">
		<xs:complexContent>
			<xs:extension base="OrderRequestBaseType">
				<xs:sequence>
					<xs:element name="status" type="OrderResponseStatusType" nillable="false"/>
					<xs:element name="errorMessage" minOccurs="0">
						<xs:annotation>
							<xs:documentation>This field is set when status element is different from success. It provides some information about the occurred problem.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="255"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="quotation" type="OrderQuotation"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GetQuotationResponseAckType">
		<xs:complexContent>
			<xs:extension base="OrderResponseBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OrderQuotation">
		<xs:sequence>
			<xs:element name="quotationId" type="QuotationIdType"/>
			<xs:element name="validityTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="price" type="CurrencyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Price of the whole order; mandatory unless the provider uses quota concept or products are free of charge.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderItemGroupPrice" type="OrderItemGroupPrice" maxOccurs="unbounded"/>
			<xs:element ref="contractInformation" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OrderItemGroupPrice">
		<xs:sequence>
			<xs:element name="provider" type="ProviderType"/>
			<xs:element name="quotationId" type="QuotationIdType" minOccurs="0"/>
			<xs:element name="validityTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="price" type="CurrencyType">
				<xs:annotation>
					<xs:documentation>Price of the whole order item gruop.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="balance" type="CurrencyType" minOccurs="0"/>
			<xs:element name="orderItemPrice" type="OrderItemPrice" maxOccurs="unbounded"/>
			<xs:element ref="contractInformation" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OrderItemPrice">
		<xs:sequence>
			<xs:element ref="itemId">
				<xs:annotation>
					<xs:documentation>string identifying the order item within the whole order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element ref="productId"/>
				<xs:element ref="taskingRequestId"/>
				<xs:element ref="subscriptionId"/>
			</xs:choice>
			<xs:element name="price" type="CurrencyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Price of the item; is optional if the price at group level is provided; not supported in case the products are free of charge.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="contractInformation" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CurrencyType">
		<xs:sequence>
			<xs:element name="value" type="xs:double"/>
			<xs:element name="currency">
				<xs:annotation>
					<xs:documentation>Currency including ISO 4217 (e.g.: EUR, USD (US Dollar), CAD (Canada Dollar), AUD (Australia Dollar), GBP (United Kindom Pounds), etc.) and also special values for representing quota.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProviderType">
		<xs:sequence>
			<xs:element name="serviceName">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="organization">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="QuotationIdType">
		<xs:restriction base="xs:anyURI"/>
	</xs:simpleType>
	<!-- ====================================================================== -->
	<!--============    DescribeResultAccess Definitions    ========================-->
	<!-- ====================================================================== -->
	<xs:complexType name="DescribeResultAccessRequestType">
		<xs:complexContent>
			<xs:extension base="OrderRequestBaseType">
				<xs:sequence>
					<xs:element name="timeStamp" type="xs:dateTime" minOccurs="0"/>
					<xs:element ref="orderId"/>
					<xs:element name="subFunction">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="allReady"/>
								<xs:enumeration value="nextReady"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DescribeResultAccessResponseType">
		<xs:complexContent>
			<xs:extension base="OrderResponseBaseType">
				<xs:sequence>
					<xs:element name="URLs" type="ItemURLType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- ====================================================================== -->
	<!--Generic Definitions-->
	<!-- ====================================================================== -->
	<xs:simpleType name="EnumStatusType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Submitted"/>
			<xs:enumeration value="Accepted"/>
			<xs:enumeration value="Cancelled"/>
			<xs:enumeration value="Completed"/>
			<xs:enumeration value="InProduction"/>
			<xs:enumeration value="Suspended"/>
			<xs:enumeration value="Failed"/>
			<xs:enumeration value="Terminated"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="StatusType">
		<xs:sequence>
			<xs:element name="status" type="EnumStatusType"/>
			<xs:element name="additionalStatusInfo" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="missionSpecificStatusInfo" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SceneSelectionType">
		<xs:sequence>
			<xs:element name="sceneType">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="sceneCoordinates">
				<xs:complexType>
					<xs:choice>
						<xs:element ref="gml:Point"/>
						<xs:element ref="gml:Polygon"/>
						<xs:element ref="gml:Rectangle"/>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="albumExtract" minOccurs="0">
				<xs:annotation>
					<xs:documentation>source data extract defined by its bounding box with album catalog coordinates (impossible for mosaic or cropping)</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="firstRow" type="xs:int"/>
						<xs:element name="nbRow" type="xs:int"/>
						<xs:element name="firstCol" type="xs:int"/>
						<xs:element name="nbCol" type="xs:int"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="temporalSelection" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="startDateTime" type="xs:dateTime"/>
						<xs:element name="endDateTime" type="xs:dateTime"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="scenePosition" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="sceneSize" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DeliveryInformationType">
		<xs:sequence>
			<xs:element name="ftp" type="FTPAddressType" minOccurs="0"/>
			<xs:element name="mail" type="DeliveryAddressType" minOccurs="0"/>
			<xs:element name="e-mail" minOccurs="0">
				<xs:annotation>
					<xs:documentation>E-mail address of the issuer of the request</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="receiverAddress" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="20"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DeliveryAddressType">
		<xs:sequence>
			<xs:element name="recipient" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="companyRef" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="postalAddress" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="streetAddress">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="40"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="city">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="40"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="state">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="40"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="postalCode">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="12"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="country">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="40"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="postBox">
							<xs:annotation>
								<xs:documentation>only number part, only digits allowed</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="12"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="telephoneNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>including country code, prefix, without special sign or intermediate blanks</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:maxLength value="18"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="facsimileTelephoneNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>including country code, prefix, without special sign or intermediate blanks</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="18"/>
						<xs:minLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CancelRequestType">
		<xs:complexContent>
			<xs:extension base="OrderRequestBaseType">
				<xs:sequence>
					<xs:element name="timeStamp" type="xs:dateTime" minOccurs="0"/>
					<xs:element ref="orderId"/>
					<xs:element ref="statusNotification"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CancelRequestAckType">
		<xs:complexContent>
			<xs:extension base="OrderResponseBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StatusNotificationType">
		<xs:complexContent>
			<xs:extension base="OrderRequestBaseType">
				<xs:sequence>
					<xs:element name="timeStamp" type="xs:dateTime" minOccurs="0"/>
					<xs:element ref="orderMonitorSpecification"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StatusNotificationAckType">
		<xs:complexContent>
			<xs:extension base="OrderResponseBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FTPAddressType">
		<xs:sequence>
			<xs:element name="serverAddress" type="xs:string"/>
			<xs:element name="userId">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="8"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="userPassword" type="xs:string"/>
			<xs:element name="directory">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1024"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OnLineAccessAddressType">
		<xs:sequence>
			<xs:element name="ServiceAddress" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Address information related to the Server hosting the item to be accessed.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="type" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>It specifies the type of the service hosting the resource e.g. WCS, WMS, etc. This field is optional, since full information about the server can be retrieved from info_URL and infoRequest elements.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="URL" type="xs:anyURI">
							<xs:annotation>
								<xs:documentation>Address of the Server</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="info_URL" type="xs:anyURI">
							<xs:annotation>
								<xs:documentation>Address for getting information about the server. In case of OGC Web Services it can refer to GetCapabilities operation with HTTP GET binding.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="infoRequest" minOccurs="0">
							<xs:annotation>
								<xs:documentation>In case the information can be retrieved by sending a request message, this field stores the message to be sent. In case of OGC Web Services supporitng SOAP GetCapabilities, this field specifies the GetCapabilities message to send at the address specified in info_URL element.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:any namespace="##any"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResourceAddress">
				<xs:annotation>
					<xs:documentation>Address information of the resource to be accessed.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="URL" type="xs:anyURI">
							<xs:annotation>
								<xs:documentation>URL for accessing the resource.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="serviceRequest" minOccurs="0">
							<xs:annotation>
								<xs:documentation>In case the resource cannot be accessed simply via the URL, but a message needs to be sent, then this field specifies the message to send.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:any namespace="##any"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemURLType">
		<xs:sequence>
			<xs:element ref="itemId"/>
			<xs:element name="itemAddress" type="OnLineAccessAddressType">
				<xs:annotation>
					<xs:documentation>This field specifies the full information for accessing the ordered item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:dateTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="EnumOrderType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PRODUCT_ORDER"/>
			<xs:enumeration value="SUBSCRIPTION_ORDER"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- ====================================================================== -->
	<!--=========================== Simple Types-->
	<!-- ====================================================================== -->
	<xs:simpleType name="EnumPackagingType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="zip"/>
			<xs:enumeration value="tar"/>
			<xs:enumeration value="tgz"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DateTimeTypes">
		<xs:union memberTypes="xs:date xs:dateTime"/>
	</xs:simpleType>
	<xs:simpleType name="OrderResponseStatusType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="success"/>
			<xs:enumeration value="partial"/>
			<xs:enumeration value="failure"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PresentationType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="brief"/>
			<xs:enumeration value="full"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PriorityType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="STANDARD"/>
			<xs:enumeration value="FAST_TRACK"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
	<!--Types & Elements taken from hma.xsd-->
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
	<xs:complexType name="CodeWithAuthorityType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="codeSpace" type="xs:anyURI" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="identifier" type="CodeWithAuthorityType"/>
	<xs:element name="itemId">
		<xs:annotation>
			<xs:documentation>string identifying the order item within the order.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:minLength value="1"/>
				<xs:maxLength value="80"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="paymentMethod">
		<xs:annotation>
			<xs:documentation>Examples:
quota, invoice, prepay (to be indicated for free products), deposit account, credit card, credit card previously supplied</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:minLength value="1"/>
				<xs:maxLength value="40"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="contractInformation">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="1024"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="orderReference">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:minLength value="1"/>
				<xs:maxLength value="30"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="productOrderOptionsId">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="40"/>
				<xs:minLength value="1"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
</xs:schema>
